model block_header (
	key chain_id hash

	field chain_id   int64
	field hash       blob
	field number     int64
	field timestamp  timestamp
	field created_at timestamp ( autoinsert, default current_timestamp )
)

create block_header ( )
delete block_header (
	where block_header.chain_id = ?
	where block_header.hash = ?
)
delete block_header ( where block_header.timestamp < ? )

read all (
	select block_header
	orderby desc block_header.timestamp
)

read one (
	select block_header
	where block_header.chain_id = ?
	where block_header.hash = ?
)

read one (
	select block_header
	where block_header.chain_id = ?
	where block_header.number = ?
)

model transfer_event (
	key chain_id block_hash log_index

	field chain_id     int64
	field block_hash   blob
	field block_number int64
	field transaction  blob
	field log_index    int
	field from_address blob
	field to_address   blob
	field token_value  int64
	field created_at timestamp ( autoinsert, default current_timestamp )
)

create transfer_event ( )

delete transfer_event (
	where transfer_event.chain_id = ?
	where transfer_event.block_number >= ?
)

delete transfer_event (
	where transfer_event.chain_id = ?
	where transfer_event.block_number < ?
)

read all (
	select transfer_event
	where transfer_event.chain_id = ?
	where transfer_event.to_address = ?
	where transfer_event.block_number >= ?
	orderby asc transfer_event.block_number
)

read first (
	select transfer_event.block_number
	where transfer_event.chain_id = ?
	orderby desc transfer_event.block_number
)

read first (
	select transfer_event.block_number
	where transfer_event.chain_id = ?
	orderby asc transfer_event.block_number
)

model token_price (
	key interval_start

	field interval_start timestamp
	field price          int64     ( updatable )
)

create token_price (
	noreturn
	replace
)

delete token_price ( where token_price.interval_start < ? )

read one (
	select token_price
	where token_price.interval_start = ?
)

read first (
	select token_price
	where token_price.interval_start < ?
	orderby desc token_price.interval_start
)

model wallet (
	key id

	field id         serial64
	field address    blob
	field claimed    timestamp ( updatable, nullable )
	field satellite  text
	field info       text      ( updatable, nullable )
	field created_at timestamp ( autoinsert, default current_timestamp )

	index ( fields satellite )
	index (
		fields address
		unique
	)
)

create wallet ( )
update wallet (
	where wallet.id = ?
)

read one (
	select wallet
	where wallet.address   = ?
	where wallet.satellite = ?
)

read first (
	select wallet
	where wallet.claimed   = null
	where wallet.satellite = ?
)

read count (
	select wallet.address
)

read count (
	select wallet
	where wallet.claimed != null
)

read count (
	select wallet
	where wallet.claimed = null
)

read all (
	select wallet
	where wallet.claimed   != null
)

read all (
	select wallet
	where wallet.satellite =  ?
	where wallet.claimed   != null
)
